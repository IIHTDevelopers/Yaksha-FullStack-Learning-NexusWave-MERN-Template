assignmentcontrollerBoundaryTestShouldRetrieveAllAssignmentsForInstructor=false
assignmentcontrollerBoundaryTestShouldRetrieveAllAssignmentsForStudent=false
assignmentcontrollerBoundaryTestShouldCreateANewAssignment=false
assignmentcontrollerBoundaryTestShouldRetrieveAAssignmentById=false
assignmentcontrollerBoundaryTestShouldUpdateAAssignmentById=false
assignmentcontrollerBoundaryTestShouldDeleteAAssignmentById=false
assignmentcontrollerBoundaryTestShouldAddANewAssignmentSubmission=false
assignmentcontrollerBoundaryTestShouldRetrieveASubmissionByAssignmentid=false
assignmentcontrollerBoundaryTestShouldRetrieveASubmissionByStudentid=false
assignmentcontrollerBoundaryTestShouldDeleteASubmittedAssignmentById=false
assignmentcontrollerBoundaryTestShouldRetrieveASubmissionStatusById=false
assignmentcontrollerBoundaryTestShouldSearchForAAssignmentByTitleAndCourseid=false
assignmentcontrollerBoundaryTestShouldRetrieveAUnsubmittedassignmentbyinstructororstudent=false
assignmentcontrollerBoundaryTestShouldReturnA404ErrorWhenGettingAAssignmentWithInvalidId=false
assignmentcontrollerBoundaryTestShouldReturnA404ErrorWhenUpdatingAAssignmentWithInvalidId=false
assignmentcontrollerBoundaryTestShouldReturnA404ErrorWhenDeletingAAssignmentWithInvalidId=false
assignmentcontrollerBoundaryTestShouldReturnA500ErrorWhenCreatingAAssignmentFails=false
assignmentcontrollerBoundaryTestShouldReturnA404ErrorWhenGettingASubmittedAssignmentWithInvalidId=false
assignmentcontrollerBoundaryTestShouldReturnA404ErrorWhenGettingASubmittedAssignmentWithInvalidId=false
assignmentcontrollerBoundaryTestShouldReturnA404ErrorWhenDeletingASubmittedAssignmentWithInvalidId=false
assignmentcontrollerBoundaryTestShouldReturnA404ErrorWhenGettingASubmittedAssignmentsStatusWithInvalidId=false
gradecontrollerBoundaryTestShouldReturn401UnauthorizedWhenTryingToAccessPut/gradesProtectedRoutesWithoutAToken=false
gradecontrollerBoundaryTestShouldRetrieveAllGrades=false
gradecontrollerBoundaryTestShouldRetrieveGradesForTheSpecifiedStudent=false
gradecontrollerBoundaryTestShouldRetrieveGradesForTheSpecifiedStudentAndCourse=false
gradecontrollerBoundaryTestShouldRetrieveGradesForTheSpecifiedCourse=false
gradecontrollerBoundaryTestShouldUpdateAGradeById=false
gradecontrollerBoundaryTestShouldRetrieveAverageGradesForAllCourses=false
gradecontrollerBoundaryTestShouldReturnA404ErrorWhenGettingGradesForTheSpecifiedStudentWithInvalidStudentid=false
gradecontrollerBoundaryTestShouldReturnA404ErrorWhenGettingGradesForTheSpecifiedStudentWithInvalidStudentidAndCourseid=false
gradecontrollerBoundaryTestShouldReturnA404ErrorWhenGettingGradesForTheSpecifiedStudentWithInvalidCourseid=false
gradecontrollerBoundaryTestShouldReturnA404ErrorWhenUpdatingAGradeWithInvalidId=false
gradecontrollerBoundaryTestShouldReturnA404ErrorWhenGettingAverageGradesForAllCourses=false
coursecontrollerBoundaryTestShouldReturn401UnauthorizedWhenTryingToAccessPost/courseProtectedRoutesWithoutAToken=false
coursecontrollerBoundaryTestShouldReturn401UnauthorizedWhenTryingToAccessPut/:idProtectedRoutesWithoutAToken=false
coursecontrollerBoundaryTestShouldReturn401UnauthorizedWhenTryingToAccessDelete/:idProtectedRoutesWithoutAToken=false
coursecontrollerBoundaryTestShouldCreateANewCourse=false
coursecontrollerBoundaryTestShouldRetrieveACourseById=false
coursecontrollerBoundaryTestShouldRetrieveACourseContentById=false
coursecontrollerBoundaryTestShouldUpdateACourseById=false
coursecontrollerBoundaryTestShouldDeleteACourseById=false
coursecontrollerBoundaryTestShouldSearchForCourseByTitleAndDescription=false
coursecontrollerBoundaryTestShouldRetrieveACourseByCategory=false
coursecontrollerBoundaryTestShouldRetrieveACourseByMinrating=false
coursecontrollerBoundaryTestShouldReturnA404ErrorWhenGettingACourseWithInvalidId=false
coursecontrollerBoundaryTestShouldReturnA404ErrorWhenGettingACourseContentWithInvalidId=false
coursecontrollerBoundaryTestShouldReturnA404ErrorWhenUpdatingACourseWithInvalidId=false
coursecontrollerBoundaryTestShouldReturnA404ErrorWhenDeletingACourseWithInvalidId=false
coursecontrollerBoundaryTestShouldReturnA500ErrorWhenCreatingACourseFails=false
instructorcontrollerBoundaryTestShouldReturn401UnauthorizedWhenTryingToAccessPut/:idProtectedRoutesWithoutAToken=false
instructorcontrollerBoundaryTestShouldReturn401UnauthorizedWhenTryingToAccessDelete/:idProtectedRoutesWithoutAToken=false
instructorcontrollerBoundaryTestShouldRetrieveAllInstructors=false
instructorcontrollerBoundaryTestShouldCreateANewInstructor=false
instructorcontrollerBoundaryTestShouldRetrieveAInstructorById=false
instructorcontrollerBoundaryTestShouldUpdateAInstructorById=false
instructorcontrollerBoundaryTestShouldDeleteAInstructorById=false
instructorcontrollerBoundaryTestShouldRetrieveACourseByIdAndInstructorid=false
instructorcontrollerBoundaryTestShouldReturnA404ErrorWhenGettingAInstructorWithInvalidId=false
instructorcontrollerBoundaryTestShouldReturnA404ErrorWhenUpdatingAInstructorWithInvalidId=false
instructorcontrollerBoundaryTestShouldReturnA404ErrorWhenDeletingAInstructorWithInvalidId=false
instructorcontrollerBoundaryTestShouldReturnA500ErrorWhenCreatingAInstructorFails=false
instructorcontrollerBoundaryTestShouldReturnA404ErrorWhenGettingACourseByInvalidIdAndInvalidInstructorid=false
studentcontrollerBoundaryTestShouldReturn401UnauthorizedWhenTryingToAccessPost/studentProtectedRoutesWithoutAToken=false
studentcontrollerBoundaryTestShouldReturn401UnauthorizedWhenTryingToAccessPut/:idProtectedRoutesWithoutAToken=false
studentcontrollerBoundaryTestShouldReturn401UnauthorizedWhenTryingToAccessDelete/:idProtectedRoutesWithoutAToken=false
studentcontrollerBoundaryTestShouldRetrieveAllEnrolledStudents=false
studentcontrollerBoundaryTestShouldRetrieveAStudentById=false
studentcontrollerBoundaryTestShouldUpdateAStudentById=false
studentcontrollerBoundaryTestShouldDeleteAStudentById=false
studentcontrollerBoundaryTestShouldSearchForStudentsByNameAndEmail=false
studentcontrollerBoundaryTestShouldAddANewReview=false
studentcontrollerBoundaryTestShouldRetrieveAllPopularCourses=false
studentcontrollerBoundaryTestShouldReturnA404ErrorWhenGettingAStudentWithInvalidId=false
studentcontrollerBoundaryTestShouldReturnA404ErrorWhenUpdatingAStudentWithInvalidId=false
studentcontrollerBoundaryTestShouldReturnA404ErrorWhenDeletingAStudentWithInvalidId=false
studentcontrollerBoundaryTestShouldReturnA500ErrorWhenCreatingAStudentFails=false
studentcontrollerBoundaryTestShouldReturnA404ErrorWhenNoDataWithStudentsByNameAndEmail=false
